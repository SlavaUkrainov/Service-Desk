package team.dna2.serviceDesk_client.controllers;

import javafx.beans.property.SimpleStringProperty;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableRow;
import javafx.scene.control.TableView;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.paint.ImagePattern;
import javafx.scene.shape.Circle;
import javafx.scene.text.Text;
import org.springframework.stereotype.Component;
import team.dna2.serviceDesk_client.ScreenManager;
import team.dna2.serviceDesk_client.models.Category;
import team.dna2.serviceDesk_client.models.Software;
import team.dna2.serviceDesk_client.models.Ticket;
import team.dna2.serviceDesk_client.models.User;

import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Objects;
import java.util.ResourceBundle;
import java.util.stream.Collectors;

import static team.dna2.serviceDesk_client.models.Ticket.tickets;

/**
 * –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä —ç–∫—Ä–∞–Ω–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –æ–±—Ä–∞—â–µ–Ω–∏–π
 */
@Component
public class DeveloperTicketsScreenController implements Initializable {
    private ClientApplication clientApplication;

    //region FXMLNodes
    @FXML private Text Logo;
    @FXML private Text Tickets;
    @FXML private Text Compendiums;
    @FXML private Text Statistics;
    @FXML private Text MyProfile;
    @FXML private Circle MyProfileCircle;
    @FXML private Button CreateTicketButton;
    @FXML private Button RefreshTableButton;
    @FXML private Button ChangeCreatorFilterButton;
    @FXML private TableView<Ticket> TicketsTable;
    //endregion

    //region TableColumns
    @FXML public TableColumn<Ticket, Integer> id;
    @FXML public TableColumn<Ticket, String> title;
    @FXML public TableColumn<Ticket, String> creator;
    @FXML public TableColumn<Ticket, String> status;
    @FXML public TableColumn<Ticket, String> category;
    @FXML public TableColumn<Ticket, String> creationDate;
    @FXML public TableColumn<Ticket, String> changeDate;
    @FXML public TableColumn<Ticket, String> software;
    @FXML public TableColumn<Ticket, String> helper;
    //endregion

    public static SimpleDateFormat dateFormat = new SimpleDateFormat("dd.MM.yyyy HH:mm:ss");
    public ObservableList<Ticket> oTickets = FXCollections.observableArrayList(Ticket.tickets);

    public static boolean showOnlyCurrentUserTickets = false;

    /**
     * WIP
     * –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ —Å—Ç–∞—Ä—Ç–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
     * –í—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –ø–µ—Ä–≤–∏—á–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É —Å—Ç–æ–ª–±—Ü–æ–≤ —Ç–∞–±–ª–∏—Ü—ã –æ–±—Ä–∞—â–µ–Ω–∏–π.
     * @param location –ü–æ –∏–¥–µ–µ —Å—Å—ã–ª–∫–∞ –Ω–∞ fxml —Ñ–∞–π–ª, –Ω–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
     * @param resources –ü–æ –∏–¥–µ–µ –ø—É—Ç—å –¥–æ —Ñ–∞–π–ª–∞ —Å —Ä–µ—Å—É—Ä—Å–∞–º–∏, –Ω–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
     */
    @Override
    public void initialize(URL location, ResourceBundle resources) {
        MyProfileCircle.setFill(new ImagePattern(new Image(Objects.requireNonNull(getClass()
                .getResourceAsStream("/images/" + User.currentUser.getAvatarFileName())))));
        MyProfile.setText(User.currentUser.getFirstName() + " " + User.currentUser.getLastName());

        id.setCellValueFactory(new PropertyValueFactory<>("Id"));
        title.setCellValueFactory(new PropertyValueFactory<>("Title"));
        creator.setCellValueFactory(ticketStringCellDataFeatures ->
                new SimpleStringProperty(User.users
                        .get(ticketStringCellDataFeatures.getValue().getCreatorId())
                        .getFullName()));
        status.setCellValueFactory(new PropertyValueFactory<>("Status"));
        category.setCellValueFactory(ts -> new SimpleStringProperty(Category.categories.get
                (ts.getValue().getCategoryId()).getName()));
        category.setText(Category.categories.get(Ticket.currentTicket.getCategoryId()).getName());
        creationDate.setCellValueFactory(ticketStringCellDataFeatures ->
                new SimpleStringProperty(dateFormat.format(ticketStringCellDataFeatures
                        .getValue().getCreationDate())));
        changeDate.setCellValueFactory(ticketStringCellDataFeatures -> {
            if (ticketStringCellDataFeatures.getValue()
                    .getChangeDate()
                    == null)
                return new SimpleStringProperty("");
            else
                return new SimpleStringProperty(dateFormat.format(ticketStringCellDataFeatures
                        .getValue().getChangeDate()));
        });
        software.setCellValueFactory(ticketStringCellDataFeatures ->
                new SimpleStringProperty(Software.software
                        .get(ticketStringCellDataFeatures.getValue().getSoftware())
                        .getName()));
        helper.setCellValueFactory(ticketStringCellDataFeatures -> {
            if (ticketStringCellDataFeatures.getValue().getHelperId() == -1)
                return new SimpleStringProperty("");
            else return
                    new SimpleStringProperty(User.users
                            .get(ticketStringCellDataFeatures.getValue().getHelperId())
                            .getFullName());
        });

        oTickets = FXCollections.observableArrayList(Ticket.tickets);
        TicketTableSetRowFactory();
        ScreenManager.mainScreen.focusedProperty().addListener((obs, oldVal, newVal) -> RefreshTicketTable());
        RefreshTicketTable();
    }

    /**
     * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ —Å—Ü–µ–Ω–∞–º–∏ (–ø–µ—Ä–µ—Ö–æ–¥–∞–º–∏ –ø–æ —ç–∫—Ä–∞–Ω–∞–º). –ü–æ–∫–∞ –Ω–µ —Ä–∞–∑–æ–±—Ä–∞–ª—Å—è –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç.
     */
    public DeveloperTicketsScreenController() {
        clientApplication = ClientApplication.GetClientApplicationInstance();
    }

    /**
     * –ß—Ç–æ–±—ã –ø—Ä–∏ –¥–∞–±–ª-–∫–ª–∏–∫–µ –õ–ö–ú –æ—Ç–∫—Ä—ã–≤–∞–ª–æ—Å—å –æ–∫–Ω–æ —Å –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–º –æ–±—Ä–∞—â–µ–Ω–∏—è
     */
    public void TicketTableSetRowFactory() {
        TicketsTable.setRowFactory(ticketTableView -> {
            TableRow<Ticket> row = new TableRow<>();
            row.setOnMouseClicked(event -> {
                if (event.getClickCount() == 2 && (!row.isEmpty())) {
                    Ticket rowData = row.getItem();
                    System.out.println(rowData);
                    Ticket.currentTicket = rowData;
                    ShowTicketScreen();
                }
            });
            return row;
        });
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –æ–±—Ä–∞—â–µ–Ω–∏–π –ø–æ –∂–µ–ª–∞–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    @FXML
    public void RefreshTableButtonClicked() {
        RefreshTicketTable();
    }

    /**
     * –û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–∞–±–ª–∏—Ü—É —Ç–∏–∫–µ—Ç–æ–≤ –Ω–∞ GUI. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å–∏–ª –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ç–æ–ª–∫–æ –µ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è, —Ç–æ –¥–µ–ª–∞–µ–º —Ç–∞–∫.
     * –ü–µ—Ä–µ–≤–æ–¥–∏–º –ª–∏—Å—Ç –≤ —á–∏—Ç–∞–µ–º—ã–π javafx —Ñ–æ—Ä–º–∞—Ç, –ø–æ—Ç–æ–º –ø–æ–∫–∞–∑—ã–≤–∞–µ–º.
     */
    @FXML
    public void RefreshTicketTable() {
        if (showOnlyCurrentUserTickets)
            oTickets = FXCollections.observableArrayList(new ArrayList<Ticket> (tickets
                    .stream().filter(ticket -> ticket.getCreatorId() == User.currentUser.getId())
                    .collect(Collectors.toList())));
        else
            oTickets = FXCollections.observableArrayList(tickets);
        TicketsTable.setItems((oTickets));
    }

    /**
     * –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π –Ω–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ–±—Ä–∞—Ç–Ω–æ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –∫–ª–∏–∫–µ
     */
    @FXML
    public void ChangeCreatorFilterButtonClicked() {
        showOnlyCurrentUserTickets = !showOnlyCurrentUserTickets;
        ChangeCreatorFilterButton.setText(showOnlyCurrentUserTickets ? "üîé –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –æ–±—Ä–∞—â–µ–Ω–∏—è" : "üîé –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è");

        System.out.println("OnlyCUTickets - " + showOnlyCurrentUserTickets);
        RefreshTicketTable();
    }

    /**
     * –ó–∞–ø—É—Å–∫–∞–µ—Ç –Ω–∞–±–æ—Ä –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –æ–∫–Ω–∞ —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –æ–±—Ä–∞—â–µ–Ω–∏—è
     */
    @FXML
    public void CreateTicketButtonClicked() {
        ScreenManager.CreateTicket();
        RefreshTicketTable(); // –ù–µ –±—É–¥–µ—Ç –ª–∏—à–Ω–∏–º
    }

    /**
     * –ü—Ä–∏ –¥–≤–æ–π–Ω–æ–º –∫–ª–∏–∫–µ –Ω–∞ —è—á–µ–π–∫—É —Ç–∞–±–ª–∏—Ü—ã –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä –æ–±—Ä–∞—â–µ–Ω–∏—è
     */
    @FXML
    public void ShowTicketScreen() {
        ScreenManager.ShowTicket();
    }

    //region DeveloperMenu
    /**
     * –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω —Å–æ —Å–ø–∏—Å–∫–æ–º –æ–±—Ä–∞—â–µ–Ω–∏–π
     */
    @FXML
    public void TicketsClicked() {
        ScreenManager.OpenTickets();
    }

    /**
     * WIP
     * –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω —Å–æ —Å–ø–∏—Å–∫–æ–º —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤
     */
    @FXML
    public void CompendiumsClicked() {
        ScreenManager.OpenCompendiums();
    }

    /**
     * WIP
     * –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
     */
    @FXML
    public void StatisticsClicked() {
        ScreenManager.OpenStatistics();
    }

    /**
     * WIP
     * –û—Ç–∫—Ä—ã—Ç–∏–µ —ç–∫—Ä–∞–Ω–∞ –ª–∏—á–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
     */
    @FXML
    public void MyProfileClicked() {
        ScreenManager.OpenMyProfile();
    }

    /**
     * –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω —Å–æ —Å–ø–∏—Å–∫–æ–º –æ–±—Ä–∞—â–µ–Ω–∏–π
     */
    @FXML
    public void LogoClicked() {
        ScreenManager.OpenTickets();
    }
    //endregion
}
